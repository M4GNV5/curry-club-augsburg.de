<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Curry Club Augsburg</title>
    <link href="http://curry-club-augsburg.de/atom.xml" rel="self" />
    <link href="http://curry-club-augsburg.de" />
    <id>http://curry-club-augsburg.de/atom.xml</id>
    <author>
        <name>Curry Club Augsburg</name>
        <email>post@curry-club-augsburg.de</email>
    </author>
    <updated>2018-08-08T00:00:00Z</updated>
    <entry>
    <title>Programm für das zweiundvierzigste Treffen</title>
    <link href="http://curry-club-augsburg.de/posts/2018-08-08-zweiundvierzigstes-Treffen.html" />
    <id>http://curry-club-augsburg.de/posts/2018-08-08-zweiundvierzigstes-Treffen.html</id>
    <published>2018-08-08T00:00:00Z</published>
    <updated>2018-08-08T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
  <header>
    <h1>Programm für das zweiundvierzigste Treffen</h1>
    <div class="info">
      Gepostet am  8. Aug 18
      
          von MatthiasHu
      
    </div>
    
    
  </header>

  <p>Ingo bietet Spiel und Spaß mit transfinitem Nim:</p>
<p>Nim ist ein mathematisches Strategiespiel. Für Unerfahrene ist es nicht ganz unknifflig, für Eingeweihte völlig trivial. Es nimmt eine zentrale Rolle in der Theorie der sog. neutralen kombinatorischen Spiele ein, weil jede Position in einem solchen Spiel äquivalent zu einer Position in Nim ist.</p>
<p>Jedenfalls wird klassisches Nim mit Haufen von Münzen gespielt. Joel David Hamkins, berühmter Mengentheoretiker und Person mit dem meisten Karma auf MathOverflow, dachte sich: Mit gewöhnlichen Haufen von Münzen kann man heutzutage niemanden mehr locken. Lass das Spiel auf unendlich viele Münzen ausweiten.</p>
<p>Es macht Spaß, diese transfinite Variante von Nim zu spielen und zu erkunden, wie man optimal spielt. Dazu darf man keine Furcht haben, über unendlich hinaus zu zählen.</p>
<p>Optionales Bonuskapitel: Die Geschichte der epischen Schlacht zwischen Herkula und Hydra. Erzählt in vier Akten. Der letzte wird dich umhauen. (Da er eine kleine aber feine metamathematische Weisheit über die Grenzen des logischen Schließens enthält.)</p>
<p>Makarius leitet eine Plaudersitzung dazu an, was in Dagstuhl bei der Veranstaltung <a href="https://www.dagstuhl.de/en/program/calendar/semhp/?semnr=18341">Formalization of Mathematics in Type Theory</a> so los war.</p>
</article>
]]></summary>
</entry>
<entry>
    <title>Programm für das vierzigste Treffen am 12.7.2018</title>
    <link href="http://curry-club-augsburg.de/posts/2018-07-10-vierzigstes-treffen.html" />
    <id>http://curry-club-augsburg.de/posts/2018-07-10-vierzigstes-treffen.html</id>
    <published>2018-07-10T00:00:00Z</published>
    <updated>2018-07-10T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
  <header>
    <h1>Programm für das vierzigste Treffen am 12.7.2018</h1>
    <div class="info">
      Gepostet am 10. Jul 18
      
          von Profpatsch
      
    </div>
    
    
  </header>

  <p>Profpatsch gibt eine Einführung über Purescript, eine Haskell-artige Sprache mit strikter Semantik, die direkt zu Javascript kompiliert.</p>
</article>
]]></summary>
</entry>
<entry>
    <title>Isabelle/VSCode, Language Server Protocol und TypeScript</title>
    <link href="http://curry-club-augsburg.de/posts/2018-07-10-einundvierzigstes-treffen.html" />
    <id>http://curry-club-augsburg.de/posts/2018-07-10-einundvierzigstes-treffen.html</id>
    <published>2018-07-10T00:00:00Z</published>
    <updated>2018-07-10T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
  <header>
    <h1>Isabelle/VSCode, Language Server Protocol und TypeScript</h1>
    <div class="info">
      Gepostet am 10. Jul 18
      
          von Makarius
      
    </div>
    
    
  </header>

  <p>Makarius hält einen Vortrag über Isabelle/VSCode, Language Server Protocol und TypeScript:</p>
<p>Als Fortsetzung der Betrachtungen zur Isabelle Prover IDE geht es diesmal um VSCode und das Language Server Protocol für generische IDEs von MicroSoft. Dies ist eine Selbst-Anwendung von VSCode als Entwicklungsplattform für TypeScript — einer relativ neuen typisierten Erweiterung von JavaScript. VSCode ist letztlich eine IDE zur Entwicklung von VSCode in TypeScript, so ähnlich wie Isabelle eine IDE zur Entwicklung von Isabelle in ML (oder anderen domain-specific formal languages) ist.</p>
<p>https://sketis.net/wp-content/uploads/2018/08/Curry-Club_Aug-2018.pdf</p>
</article>
]]></summary>
</entry>
<entry>
    <title>Programm für das neununddreissigste Treffen am 14. Juni 2018</title>
    <link href="http://curry-club-augsburg.de/posts/2018-05-28-neununddreissigstes-treffen.html" />
    <id>http://curry-club-augsburg.de/posts/2018-05-28-neununddreissigstes-treffen.html</id>
    <published>2018-05-28T00:00:00Z</published>
    <updated>2018-05-28T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
  <header>
    <h1>Programm für das neununddreissigste Treffen am 14. Juni 2018</h1>
    <div class="info">
      Gepostet am 28. Mai 18
      
          von Profpatsch
      
    </div>
    
    
  </header>

  <p>Basierend auf <a href="https://sketis.net/wp-content/uploads/2018/05/isabelle-jedit-fide2018.pdf">seinem letzten Bericht</a> wird Makarius uns die Implementierung der aktuellen IDE (basierend auf Scala/jEdit) und die Zukunft der UI (Typescript/VSCode) vorstellen.</p>
</article>
]]></summary>
</entry>
<entry>
    <title>Programm für das achtunddreißigste Treffen am 17. Mai 2018</title>
    <link href="http://curry-club-augsburg.de/posts/2018-05-17-achtunddreissigstes-treffen.html" />
    <id>http://curry-club-augsburg.de/posts/2018-05-17-achtunddreissigstes-treffen.html</id>
    <published>2018-05-17T00:00:00Z</published>
    <updated>2018-05-17T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
  <header>
    <h1>Programm für das achtunddreißigste Treffen am 17. Mai 2018</h1>
    <div class="info">
      Gepostet am 17. Mai 18
      
          von MatthiasHu
      
    </div>
    
    
  </header>

  <p>Heute Abend hielt Daniel einen Vortrag zum Thema “Faster DBScan and HDBScan” (DBScan = Density-Based Spatial Clustering of Applications with Noise). Es wurden einige Fragen zu Paralellisierbarkeit gestellt und überlegt, ob es eine „alten Schule“ (Algorithmen auf einem unveränderlichen Datenset) und eine „neuen Schule“ (Algorithmen, die sich mit hinzukommenden Datenpunkten effizient updaten können) des Algorithmendesigns gibt.</p>
<p>Desweiteren gibt es ein Pad zur weiteren Organisation des Curry Clubs: https://ola.pads.ccc.de/curry</p>
<p>Vortragsvorschläge gesucht!</p>
</article>
]]></summary>
</entry>
<entry>
    <title>Programm für das siebenunddreißigste Treffen am 19. April 2018</title>
    <link href="http://curry-club-augsburg.de/posts/2018-04-19-siebenunddreissigstes-treffen.html" />
    <id>http://curry-club-augsburg.de/posts/2018-04-19-siebenunddreissigstes-treffen.html</id>
    <published>2018-04-19T00:00:00Z</published>
    <updated>2018-04-19T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
  <header>
    <h1>Programm für das siebenunddreißigste Treffen am 19. April 2018</h1>
    <div class="info">
      Gepostet am 19. Apr 18
      
          von timjb
      
    </div>
    
    
  </header>

  <p>For unser 37. Treffen gibt es noch keine Vortragsankündigungen!</p>
<p><strong>Achtung:</strong> Das 37. Treffen findet <strong>nicht</strong> am 19. April statt. Es wird möglicherweise um eine Woche nach hinten verschoben, das wird gerade auf der Mailingliste diskutiert.</p>
<p>Update: Das 37. Treffen ist ausgefallen. /o<br />
</p>
</article>
]]></summary>
</entry>
<entry>
    <title>Programm für das sechsunddreißigste Treffen am 22. März 2018</title>
    <link href="http://curry-club-augsburg.de/posts/2018-03-22-sechsunddreissigstes-treffen.html" />
    <id>http://curry-club-augsburg.de/posts/2018-03-22-sechsunddreissigstes-treffen.html</id>
    <published>2018-03-22T00:00:00Z</published>
    <updated>2018-03-22T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
  <header>
    <h1>Programm für das sechsunddreißigste Treffen am 22. März 2018</h1>
    <div class="info">
      Gepostet am 22. Mär 18
      
          von timjb
      
    </div>
    
    
  </header>

  <p>Profpatsch hält ein Vortrag zur Typsystementwicklung: Ein Typsystem zu bauen klingt wie ein extrem schweres Problem, an das sich nur Expertinnen wagen sollten.</p>
<p>Profpatsch wird zeigen, dass es gar nicht so schwer ist, ein (einfaches) Typsystem zu bauen, das auch komplexere Werte einer dynamischen (uni-typisierten) Sprache (nix) mit aussagekräftigen Typfehlern testen kann.</p>
<p>Das Ergebnis unterstützt Skalare, Listen und Maps, Produkttypen, Summentypen und Unions (keine Lambdas).</p>
<p>Für die rekursiven Typchecks führte die Anwendung eines Katamorphismus zu extrem sauberem und konzisem Code, was auch zeigt, dass die Ideen aus Haskell durchaus in ungetypten Programmiersprachen zur Anwendung kommen können.</p>
<p><s>Ingo hält einen Vortrag zu Zippern. Die verwendet man, um funktional in Datenstrukturen wie etwa Bäumen zu navigieren. Kurioserweise haben sie etwas mit der Ableitung von Funktionen in Mathematik zu tun. Zum Abschluss wird ein kleines Schmankerl von Oleg vorgestellt.</s></p>
</article>
]]></summary>
</entry>
<entry>
    <title>Programm für das fünfunddreißigste Treffen am 22. Februar 2018</title>
    <link href="http://curry-club-augsburg.de/posts/2018-02-22-fuenfunddreissigstes-treffen.html" />
    <id>http://curry-club-augsburg.de/posts/2018-02-22-fuenfunddreissigstes-treffen.html</id>
    <published>2018-02-22T00:00:00Z</published>
    <updated>2018-02-22T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
  <header>
    <h1>Programm für das fünfunddreißigste Treffen am 22. Februar 2018</h1>
    <div class="info">
      Gepostet am 22. Feb 18
      
          von iblech
      
    </div>
    
    
  </header>

  <p>Ingo macht ein Live-Coding zu einem klassischen Thema: Wieso hat die Verkettung von Listen manchmal eine ganz traurige Laufzeit? Wie können sog. Differenzlisten das Problem umgehen? Und wie äußert sich das Problem und seine Lösung eine Stufe höher, bei freien Monaden?</p>
<p>Matthias wird Bemerkungen zu Kan-Erweiterungen hereinrufen.</p>
</article>
]]></summary>
</entry>
<entry>
    <title>Programm für das vierunddreißigste Treffen am 25. Januar 2018</title>
    <link href="http://curry-club-augsburg.de/posts/2017-12-04-vierunddreissigstes-treffen.html" />
    <id>http://curry-club-augsburg.de/posts/2017-12-04-vierunddreissigstes-treffen.html</id>
    <published>2017-12-04T00:00:00Z</published>
    <updated>2017-12-04T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
  <header>
    <h1>Programm für das vierunddreißigste Treffen am 25. Januar 2018</h1>
    <div class="info">
      Gepostet am  4. Dez 17
      
          von iblech
      
    </div>
    
    
  </header>

  <p>Das 34. Treffen würde regulär am 28. Dezember 2017 stattfinden. Da viele zu der Zeit auf dem Kongress sind, fällt es aus, sodass wir uns am 25. Januar 2018 wieder treffen.</p>
</article>
]]></summary>
</entry>
<entry>
    <title>Programm für das dreiunddreißigste Treffen am 30. November 2017</title>
    <link href="http://curry-club-augsburg.de/posts/2017-11-01-dreiunddreissigstes-treffen.html" />
    <id>http://curry-club-augsburg.de/posts/2017-11-01-dreiunddreissigstes-treffen.html</id>
    <published>2017-11-01T00:00:00Z</published>
    <updated>2017-11-01T00:00:00Z</updated>
    <summary type="html"><![CDATA[<article>
  <header>
    <h1>Programm für das dreiunddreißigste Treffen am 30. November 2017</h1>
    <div class="info">
      Gepostet am  1. Nov 17
      
          von iblech
      
    </div>
    
    
  </header>

  <p>Matthias wird in einem Kurzvortrag (der eigentlich an unserem letzten runden Jubiläumstreffen hätte stattfinden sollen) auf Church-Encodings abnerden. Er erklärt auf anschauliche Art und Weise, was es mit dem gefeierten <a href="https://de.wikipedia.org/wiki/Lambda-Kalk%C3%BCl">λ-Kalkül</a> auf sich hat und wie man ihn als Grundlage für Berechenbarkeitstheorie verwenden kann. Im λ-Kalkül gibt es nur drei Primitiven: Funktionsanwendung, Variablen und λ-Abstraktion. Es gibt nicht: Zahlen, Listen, Bäume, Mengen, … Trotzdem kann man all diese Dinge nachbauen. Matthias erklärt, wie das geht.</p>
<p>Simon stellt seine Haskell-Implementierung von formalen Potenzreihen vor. Potenzreihen sind Wäscheleinen für Zahlen und kamen schon im vorletzten Vortrag von Manuel kurz vor. sigfpe, der Urheber des <a href="http://blog.sigfpe.com/">berühmten Haskell-Blogs</a>, spricht auch oft über sie.</p>
<p>Zum Abschluss stellt Profpatsch die mit Absicht nicht-turingvollständige Sprache <a href="https://hackage.haskell.org/package/dhall-1.8.0/docs/Dhall-Tutorial.html">Dhall</a> vor. Gabriel Gonzales hat diese Sprache erdacht und umgesetzt, und Profpatsch hat ein Cheatsheet geschrieben und versucht gerade, sie nach JavaScript zu kompilieren (mit GHCJS und nix).</p>
</article>
]]></summary>
</entry>

</feed>
