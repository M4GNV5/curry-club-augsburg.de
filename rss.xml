<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>Curry Club Augsburg</title>
        <link>http://curry-club-augsburg.de</link>
        <description><![CDATA[Neuigkeiten vom Curry Club Augsburg]]></description>
        <atom:link href="http://curry-club-augsburg.de/rss.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Thu, 19 Apr 2018 00:00:00 UT</lastBuildDate>
        <item>
    <title>Programm für das siebenunddreißigste Treffen am 19. April 2018</title>
    <link>http://curry-club-augsburg.de/posts/2018-04-19-siebenunddreissigstes-treffen.html</link>
    <description><![CDATA[<article>
  <header>
    <h1>Programm für das siebenunddreißigste Treffen am 19. April 2018</h1>
    <div class="info">
      Gepostet am 19. Apr 18
      
          von timjb
      
    </div>
    
    
  </header>

  <p>For unser 37. Treffen gibt es noch keine Vortragsankündigungen!</p>
<p><strong>Achtung:</strong> Das 37. Treffen findet <strong>nicht</strong> am 19. April statt. Es wird möglicherweise um eine Woche nach hinten verschoben, das wird gerade auf der Mailingliste diskutiert.</p>
</article>
]]></description>
    <pubDate>Thu, 19 Apr 2018 00:00:00 UT</pubDate>
    <guid>http://curry-club-augsburg.de/posts/2018-04-19-siebenunddreissigstes-treffen.html</guid>
    <dc:creator>Curry Club Augsburg</dc:creator>
</item>
<item>
    <title>Programm für das sechsunddreißigste Treffen am 22. März 2018</title>
    <link>http://curry-club-augsburg.de/posts/2018-03-22-sechsunddreissigstes-treffen.html</link>
    <description><![CDATA[<article>
  <header>
    <h1>Programm für das sechsunddreißigste Treffen am 22. März 2018</h1>
    <div class="info">
      Gepostet am 22. Mär 18
      
          von timjb
      
    </div>
    
    
  </header>

  <p>Profpatsch hält ein Vortrag zur Typsystementwicklung: Ein Typsystem zu bauen klingt wie ein extrem schweres Problem, an das sich nur Expertinnen wagen sollten.</p>
<p>Profpatsch wird zeigen, dass es gar nicht so schwer ist, ein (einfaches) Typsystem zu bauen, das auch komplexere Werte einer dynamischen (uni-typisierten) Sprache (nix) mit aussagekräftigen Typfehlern testen kann.</p>
<p>Das Ergebnis unterstützt Skalare, Listen und Maps, Produkttypen, Summentypen und Unions (keine Lambdas).</p>
<p>Für die rekursiven Typchecks führte die Anwendung eines Katamorphismus zu extrem sauberem und konzisem Code, was auch zeigt, dass die Ideen aus Haskell durchaus in ungetypten Programmiersprachen zur Anwendung kommen können.</p>
<p>Ingo hält einen Vortrag zu Zippern. Die verwendet man, um funktional in Datenstrukturen wie etwa Bäumen zu navigieren. Kurioserweise haben sie etwas mit der Ableitung von Funktionen in Mathematik zu tun. Zum Abschluss wird ein kleines Schmankerl von Oleg vorgestellt.</p>
</article>
]]></description>
    <pubDate>Thu, 22 Mar 2018 00:00:00 UT</pubDate>
    <guid>http://curry-club-augsburg.de/posts/2018-03-22-sechsunddreissigstes-treffen.html</guid>
    <dc:creator>Curry Club Augsburg</dc:creator>
</item>
<item>
    <title>Programm für das fünfunddreißigste Treffen am 22. Februar 2018</title>
    <link>http://curry-club-augsburg.de/posts/2018-02-22-fuenfunddreissigstes-treffen.html</link>
    <description><![CDATA[<article>
  <header>
    <h1>Programm für das fünfunddreißigste Treffen am 22. Februar 2018</h1>
    <div class="info">
      Gepostet am 22. Feb 18
      
          von iblech
      
    </div>
    
    
  </header>

  <p>Ingo macht ein Live-Coding zu einem klassischen Thema: Wieso hat die Verkettung von Listen manchmal eine ganz traurige Laufzeit? Wie können sog. Differenzlisten das Problem umgehen? Und wie äußert sich das Problem und seine Lösung eine Stufe höher, bei freien Monaden?</p>
<p>Matthias wird Bemerkungen zu Kan-Erweiterungen hereinrufen.</p>
</article>
]]></description>
    <pubDate>Thu, 22 Feb 2018 00:00:00 UT</pubDate>
    <guid>http://curry-club-augsburg.de/posts/2018-02-22-fuenfunddreissigstes-treffen.html</guid>
    <dc:creator>Curry Club Augsburg</dc:creator>
</item>
<item>
    <title>Programm für das vierunddreißigste Treffen am 25. Januar 2018</title>
    <link>http://curry-club-augsburg.de/posts/2017-12-04-vierunddreissigstes-treffen.html</link>
    <description><![CDATA[<article>
  <header>
    <h1>Programm für das vierunddreißigste Treffen am 25. Januar 2018</h1>
    <div class="info">
      Gepostet am  4. Dez 17
      
          von iblech
      
    </div>
    
    
  </header>

  <p>Das 34. Treffen würde regulär am 28. Dezember 2017 stattfinden. Da viele zu der Zeit auf dem Kongress sind, fällt es aus, sodass wir uns am 25. Januar 2018 wieder treffen.</p>
</article>
]]></description>
    <pubDate>Mon, 04 Dec 2017 00:00:00 UT</pubDate>
    <guid>http://curry-club-augsburg.de/posts/2017-12-04-vierunddreissigstes-treffen.html</guid>
    <dc:creator>Curry Club Augsburg</dc:creator>
</item>
<item>
    <title>Programm für das dreiunddreißigste Treffen am 30. November 2017</title>
    <link>http://curry-club-augsburg.de/posts/2017-11-01-dreiunddreissigstes-treffen.html</link>
    <description><![CDATA[<article>
  <header>
    <h1>Programm für das dreiunddreißigste Treffen am 30. November 2017</h1>
    <div class="info">
      Gepostet am  1. Nov 17
      
          von iblech
      
    </div>
    
    
  </header>

  <p>Matthias wird in einem Kurzvortrag (der eigentlich an unserem letzten runden Jubiläumstreffen hätte stattfinden sollen) auf Church-Encodings abnerden. Er erklärt auf anschauliche Art und Weise, was es mit dem gefeierten <a href="https://de.wikipedia.org/wiki/Lambda-Kalk%C3%BCl">λ-Kalkül</a> auf sich hat und wie man ihn als Grundlage für Berechenbarkeitstheorie verwenden kann. Im λ-Kalkül gibt es nur drei Primitiven: Funktionsanwendung, Variablen und λ-Abstraktion. Es gibt nicht: Zahlen, Listen, Bäume, Mengen, … Trotzdem kann man all diese Dinge nachbauen. Matthias erklärt, wie das geht.</p>
<p>Simon stellt seine Haskell-Implementierung von formalen Potenzreihen vor. Potenzreihen sind Wäscheleinen für Zahlen und kamen schon im vorletzten Vortrag von Manuel kurz vor. sigfpe, der Urheber des <a href="http://blog.sigfpe.com/">berühmten Haskell-Blogs</a>, spricht auch oft über sie.</p>
<p>Zum Abschluss stellt Profpatsch die mit Absicht nicht-turingvollständige Sprache <a href="https://hackage.haskell.org/package/dhall-1.8.0/docs/Dhall-Tutorial.html">Dhall</a> vor. Gabriel Gonzales hat diese Sprache erdacht und umgesetzt, und Profpatsch hat ein Cheatsheet geschrieben und versucht gerade, sie nach JavaScript zu kompilieren (mit GHCJS und nix).</p>
</article>
]]></description>
    <pubDate>Wed, 01 Nov 2017 00:00:00 UT</pubDate>
    <guid>http://curry-club-augsburg.de/posts/2017-11-01-dreiunddreissigstes-treffen.html</guid>
    <dc:creator>Curry Club Augsburg</dc:creator>
</item>
<item>
    <title>Programm für das zweiunddreißigste Treffen am 2. November 2017</title>
    <link>http://curry-club-augsburg.de/posts/2017-10-11-zweiunddreissigstes-treffen.html</link>
    <description><![CDATA[<article>
  <header>
    <h1>Programm für das zweiunddreißigste Treffen am 2. November 2017</h1>
    <div class="info">
      Gepostet am 11. Okt 17
      
          von uwap
      
    </div>
    
    <img src="/images/church-32-pow.png" alt="32" />
    
    
  </header>

  <p>Ingo wird mit uns auf höchstens 30 Minuten die bei den <a href="2017-09-07-dreissigstes-treffen.html">letzten</a> <a href="2017-10-05-einunddreissigstes-treffen.md">beiden</a> Treffen begonnene Reise durch wundersame Phänomene der Logik abschließen. Wir werden über Programme sprechen, die je nachdem, in welchem mathematischen Alternativuniversum sie ausgeführt werden, ein anderes Verhalten an den Tag legen, und einen Rosetta-Stein kennenlernen, der Berechenbarkeitstheorie mit Logik und Zahlentheorie verwebt. Abschließend werden wir noch ein verblüffendes Beispiel dafür sehen, dass Zufall als wertvolle Ressource gehandelt werden muss.</p>
<p>Tim begab sich die letzten Wochen auf die Spuren von Makarius und entwickelte seinen eigenen kleinen Theorembeweiser, angetrieben von dem Wunsch, die Übungsblätter der aktuell laufenden Kategorientheorievorlesung von Marc und Matthias formalisiert abgeben zu können. Tim wird in seinem Vortrag die Architektur seines Systems und die Erfahrungen, die er bei der Entwicklung machte, vorstellen.</p>
<p>Matthias erklärt <a href="/images/church-32-pow.png">oben stehendes</a> zur Nummer des heutigen Treffens passendes Bild.</p>
</article>
]]></description>
    <pubDate>Wed, 11 Oct 2017 00:00:00 UT</pubDate>
    <guid>http://curry-club-augsburg.de/posts/2017-10-11-zweiunddreissigstes-treffen.html</guid>
    <dc:creator>Curry Club Augsburg</dc:creator>
</item>
<item>
    <title>Programm für das einunddreißigste Treffen am 5. Oktober 2017</title>
    <link>http://curry-club-augsburg.de/posts/2017-10-05-einunddreissigstes-treffen.html</link>
    <description><![CDATA[<article>
  <header>
    <h1>Programm für das einunddreißigste Treffen am 5. Oktober 2017</h1>
    <div class="info">
      Gepostet am  5. Okt 17
      
          von uwap
      
    </div>
    
    
  </header>

  <p>Der angekündigte Vortrag marudor zu typisiertem JavaScript musste leider krankheitsbedingt entfallen.</p>
<p>Ingo setzte mit uns die beim <a href="2017-09-07-dreissigstes-treffen.html">letzten Treffen begonnene</a> Reise durch wundersame Phänomene der Logik fort.</p>
<iframe width="640" height="360" src="https://www.youtube-nocookie.com/embed/S9x181N8k_U" frameborder="0" allowfullscreen>
</iframe>
<p>Richi sprach über Buffer Overflows, Arbitrary Code Execution und Format String Exploits.</p>
<iframe width="640" height="360" src="https://www.youtube-nocookie.com/embed/_moCOMcjkJs" frameborder="0" allowfullscreen>
</iframe>
<p>Marc erklärte SSA: Die meisten modernen Compiler für konventionelle Programmiersprachen (GCC, Clang, SpiderMonkey, …) schreiben das Programm für ihr Middle-End in “Singe-Static-Assignment-Form” um, in der es dann optimiert wird, bevor die SSA-Form im Back-End dann in Maschinensprache umgeschrieben wird. Jeder Compiler-Bauer muß also wissen, was SSA bedeutet. Wir geben kurz an, um was es sich bei der SSA-Form handelt, und was das Ganze mit funktionaler Programmierung zu tun hat (woraus sich im Übrigen auch der Grund für den Vorteil der SSA-Form ergibt.)</p>
<iframe width="640" height="360" src="https://www.youtube-nocookie.com/embed/iSLIclOTPE4" frameborder="0" allowfullscreen>
</iframe>
</article>
]]></description>
    <pubDate>Thu, 05 Oct 2017 00:00:00 UT</pubDate>
    <guid>http://curry-club-augsburg.de/posts/2017-10-05-einunddreissigstes-treffen.html</guid>
    <dc:creator>Curry Club Augsburg</dc:creator>
</item>
<item>
    <title>Programm für das dreißigste Treffen am 7. September 2017</title>
    <link>http://curry-club-augsburg.de/posts/2017-09-07-dreissigstes-treffen.html</link>
    <description><![CDATA[<article>
  <header>
    <h1>Programm für das dreißigste Treffen am 7. September 2017</h1>
    <div class="info">
      Gepostet am  7. Sep 17
      
          von uwap
      
    </div>
    
    
  </header>

  <p>Marc trug über <em>Tail Calls, Proper Tail Recursion, Continuations, CPS-Transformation, Call/CC und Continuation Marks</em> vor. Bei einem späteren Treffen könnte noch die <em>Korrekte Implementierung von Lazy Evaluation in Programmiersprachen mit Strict Evaluation</em> diskutiert werden.</p>
<iframe width="640" height="360" src="https://www.youtube-nocookie.com/embed/iuaM9-PX1ls?rel=0" frameborder="0" allowfullscreen>
</iframe>
<p>Ingo stellte uns eine <em>düstere Ecke der Logik</em> vor, Gödels gefeierten Unvollständigkeitssatz, der aussagt: Es gibt Aussagen, die wahr, aber nicht beweisbar sind. Auf den ersten Blick klingt das paradox – denn wie können wir schon von einer Aussage zweifelsfrei wissen, dass sie wahr ist, wenn nicht durch einen Beweis? Ingo präsentierte die Auflösung dieses Scheinwiderspruchs.</p>
<p>Unsere kurze Reise durch wundersame Phänomene der Logik wird beim <a href="2017-10-05-einunddreissigstes-treffen.html">nächsten Treffen</a> fortgesetzt.</p>
<iframe width="640" height="360" src="https://www.youtube-nocookie.com/embed/gFioK87z8dE?rel=0" frameborder="0" allowfullscreen>
</iframe>
</article>
]]></description>
    <pubDate>Thu, 07 Sep 2017 00:00:00 UT</pubDate>
    <guid>http://curry-club-augsburg.de/posts/2017-09-07-dreissigstes-treffen.html</guid>
    <dc:creator>Curry Club Augsburg</dc:creator>
</item>
<item>
    <title>Programm für das neunundzwanzigste Treffen am 10. August 2017</title>
    <link>http://curry-club-augsburg.de/posts/2017-08-10-neunundzwanzigstes-treffen.html</link>
    <description><![CDATA[<article>
  <header>
    <h1>Programm für das neunundzwanzigste Treffen am 10. August 2017</h1>
    <div class="info">
      Gepostet am 10. Aug 17
      
          von Profpatsch
      
    </div>
    
    
  </header>

  <p>Makarius berichtet über sein <a href="https://marketplace.visualstudio.com/items?itemName=makarius.isabelle">laufendes Projekt</a>, Visual Studio Code als Isabelle/PIDE-Frontend zu verwenden.</p>
<p>Profpatsch stellt <a href="https://hackage.haskell.org/package/turtle">Turtle</a> vor, eine Haskell-Bibliothek, mit der man Haskell als “bessere Bash” verwenden kann. Das fängt bei der Überwindung der Quotinghölle an und geht dann noch viel weiter.</p>
</article>
]]></description>
    <pubDate>Thu, 10 Aug 2017 00:00:00 UT</pubDate>
    <guid>http://curry-club-augsburg.de/posts/2017-08-10-neunundzwanzigstes-treffen.html</guid>
    <dc:creator>Curry Club Augsburg</dc:creator>
</item>
<item>
    <title>Programm für das achtundzwanzigste Treffen am 13. Juli 2017</title>
    <link>http://curry-club-augsburg.de/posts/2017-07-04-achtundzwanzigstes-treffen.html</link>
    <description><![CDATA[<article>
  <header>
    <h1>Programm für das achtundzwanzigste Treffen am 13. Juli 2017</h1>
    <div class="info">
      Gepostet am  4. Jul 17
      
          von Tim Baumann, Profpatsch
      
    </div>
    
    
  </header>

  <p>Wir trafen uns diesmal recht unvorbereitet und sprachen ein bisschen über <code>recursion schemes</code>, wie <a href="https://hackage.haskell.org/package/data-fix-0.0.4/docs/Data-Fix.html">Fix</a> verwendet werden kann, was denn ein <a href="https://hackage.haskell.org/package/data-fix-0.0.4/docs/Data-Fix.html#v:hylo">Hylomorphismus</a> und ein <a href="https://hackage.haskell.org/package/data-fix-0.0.4/docs/Data-Fix.html#v:ana">Anamorphismus</a> ist und wie Edward Kmett das in seinem <a href="https://hackage.haskell.org/package/recursion-schemes-5.0.1/docs/Data-Functor-Foldable.html"><code>recursion-schemes</code></a>-Paket auf die Spitze treibt.</p>
</article>
]]></description>
    <pubDate>Tue, 04 Jul 2017 00:00:00 UT</pubDate>
    <guid>http://curry-club-augsburg.de/posts/2017-07-04-achtundzwanzigstes-treffen.html</guid>
    <dc:creator>Curry Club Augsburg</dc:creator>
</item>

    </channel>
</rss>
